// <auto-generated />
using System;
using DatabaseTask.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DatabaseTask.Data.Migrations
{
    [DbContext(typeof(DatabaseTaskDbContext))]
    [Migration("20251031133023_init4")]
    partial class init4
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DatabaseTask.Core.Domain.Arstid", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Eriala")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nimi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OsakondId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TooTelefon")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OsakondId");

                    b.ToTable("Arstids");
                });

            modelBuilder.Entity("DatabaseTask.Core.Domain.MaaratudRavimid", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Annus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RavimidId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Toimeaine")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RavimidId");

                    b.ToTable("Maaratudravimids");
                });

            modelBuilder.Entity("DatabaseTask.Core.Domain.Osakond", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("OsakonnaInfoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OsakonnaNimi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OsakonnaInfoId");

                    b.ToTable("Osakonds");
                });

            modelBuilder.Entity("DatabaseTask.Core.Domain.OsakonnaInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Asukoht")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KontaktTelefon")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("OsakonnaInfos");
                });

            modelBuilder.Entity("DatabaseTask.Core.Domain.Patsient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Isikukood")
                        .HasColumnType("int");

                    b.Property<int>("KontaktTelefon")
                        .HasColumnType("int");

                    b.Property<string>("Nimi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("Sunnikuupaev")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("Patsients");
                });

            modelBuilder.Entity("DatabaseTask.Core.Domain.Ravikulastus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ArstidId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Kirjeldus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("Kuupaev")
                        .HasColumnType("date");

                    b.Property<Guid?>("MaaratudRavimidId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PatsientId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ArstidId");

                    b.HasIndex("MaaratudRavimidId");

                    b.HasIndex("PatsientId");

                    b.ToTable("Ravikulastuss");
                });

            modelBuilder.Entity("DatabaseTask.Core.Domain.Ravimid", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ravim")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ravimids");
                });

            modelBuilder.Entity("DatabaseTask.Core.Domain.Arstid", b =>
                {
                    b.HasOne("DatabaseTask.Core.Domain.Osakond", null)
                        .WithMany("Arstids")
                        .HasForeignKey("OsakondId");
                });

            modelBuilder.Entity("DatabaseTask.Core.Domain.MaaratudRavimid", b =>
                {
                    b.HasOne("DatabaseTask.Core.Domain.Ravimid", null)
                        .WithMany("MaaratudRavimids")
                        .HasForeignKey("RavimidId");
                });

            modelBuilder.Entity("DatabaseTask.Core.Domain.Osakond", b =>
                {
                    b.HasOne("DatabaseTask.Core.Domain.OsakonnaInfo", null)
                        .WithMany("Osakonds")
                        .HasForeignKey("OsakonnaInfoId");
                });

            modelBuilder.Entity("DatabaseTask.Core.Domain.Ravikulastus", b =>
                {
                    b.HasOne("DatabaseTask.Core.Domain.Arstid", null)
                        .WithMany("Ravikulastus")
                        .HasForeignKey("ArstidId");

                    b.HasOne("DatabaseTask.Core.Domain.MaaratudRavimid", null)
                        .WithMany("Ravikulastus")
                        .HasForeignKey("MaaratudRavimidId");

                    b.HasOne("DatabaseTask.Core.Domain.Patsient", null)
                        .WithMany("Ravikulastus")
                        .HasForeignKey("PatsientId");
                });

            modelBuilder.Entity("DatabaseTask.Core.Domain.Arstid", b =>
                {
                    b.Navigation("Ravikulastus");
                });

            modelBuilder.Entity("DatabaseTask.Core.Domain.MaaratudRavimid", b =>
                {
                    b.Navigation("Ravikulastus");
                });

            modelBuilder.Entity("DatabaseTask.Core.Domain.Osakond", b =>
                {
                    b.Navigation("Arstids");
                });

            modelBuilder.Entity("DatabaseTask.Core.Domain.OsakonnaInfo", b =>
                {
                    b.Navigation("Osakonds");
                });

            modelBuilder.Entity("DatabaseTask.Core.Domain.Patsient", b =>
                {
                    b.Navigation("Ravikulastus");
                });

            modelBuilder.Entity("DatabaseTask.Core.Domain.Ravimid", b =>
                {
                    b.Navigation("MaaratudRavimids");
                });
#pragma warning restore 612, 618
        }
    }
}
